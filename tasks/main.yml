---
- name: Create system acme group
  become: true
  ansible.builtin.group:
    name: "{{ acme_group }}"
    state: present
    system: true

- name: Create system acme user
  become: true
  ansible.builtin.user:
    name: "{{ acme_user }}"
    state: present
    system: true
    create_home: true
    skeleton: false
    home: "{{ acme_home }}"
    shell: "{{ acme_shell }}"
    group: "{{ acme_group }}"

- name: Ensure required packages are installed
  become: true
  ansible.builtin.apt:
    name: "{{ acmesh_req_packages }}"
    state: present

- name: Ensure directories exist
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ acme_user }}"
    group: "{{ acme_group }}"
  loop:
    - "{{ acme_home }}"
    - "{{ acmesh_config_path }}"
    - "{{ acmesh_install_path }}"
    - "{{ acmesh_cert_path }}"

- name: Check acme.sh installation
  ansible.builtin.stat:
    path: "{{ acmesh_config_path }}/account.conf"
  register: stat_account_conf

- name: Download and install acme.sh
  when: "not stat_account_conf.stat.exists"
  block:
    - name: Create temporary directory for git repository
      become: true
      become_method: su
      become_user: "{{ acme_user }}"
      become_flags: '-s /bin/sh'
      ansible.builtin.tempfile:
        state: directory
        prefix: acmesh_git_
      register: acme_tmp_repo
      changed_when: False

    - name: Temporary clone acme.sh git repository
      become: true
      become_method: su
      become_user: "{{ acme_user }}"
      become_flags: '-s /bin/sh'
      ansible.builtin.git:
        dest: "{{ acme_tmp_repo.path }}"
        clone: true
        depth: 1
        repo: "{{ acmesh_repository }}"
        version: "{{ acmesh_version }}"
      changed_when: False

    - name: Install acme.sh
      become: true
      become_method: su
      become_user: "{{ acme_user }}"
      become_flags: '-s /bin/sh'
      ansible.builtin.command:
        cmd: >
          "{{ acme_tmp_repo.path }}/acme.sh"
          --install
          --home "{{ acmesh_install_path }}"
          --config-home "{{ acmesh_config_path }}"
          --cert-home "{{ acmesh_cert_path }}"
          --accountemail "{{ acmesh_email | mandatory }}"
          --nocron
        chdir: "{{ acme_tmp_repo.path }}"
        creates: "{{ acmesh_config_path }}/account.conf"

  always:
    - name: Delete temporary git clone
      ansible.builtin.file:
        path: "{{ acme_tmp_repo.path }}"
        state: absent
      changed_when: False
